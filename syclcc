#!/bin/bash

   ##########################################################################
   #                                                                        #
   #   Copyright (c) 2019 Paul Keir, University of the West of Scotland.    #
   #                                                                        #
   ##########################################################################

usage() { echo syclcc: error: $2 >&2; exit $1; }

[ -z "$COMPUTECPP_DIR" ] && usage 2 "create and initialise a COMPUTECPP_DIR environment var"

# If they keep changing the name, it will get complex to map to generic scripts
# quite fast by introspecting the name.
# This is a keyvalue pair, where the right hand value is a script id where it 
# starts from earliest version of the script to newest. A user can just extend 
# this mapping with specialized scripts if they wish. But for the moment it 
# saves having 30 scripts with most being duplicates.
declare -A RELEASE_SCRIPT_MAP=(
["ComputeCpp-15.10-Linux"]="syclcc-ComputeCpp-15.10-to-0.1-Ubuntu.sh"
["ComputeCpp-16.03-Linux"]="syclcc-ComputeCpp-15.10-to-0.1-Ubuntu.sh"
["ComputeCpp-16.05-Linux"]="syclcc-ComputeCpp-15.10-to-0.1-Ubuntu.sh"
["ComputeCpp-CE-0.1-Linux"]="syclcc-ComputeCpp-15.10-to-0.1-Ubuntu.sh"
["ComputeCpp-CE-0.2.0-Linux"]="syclcc-ComputeCpp-0.2.0-to-0.4.0-Ubuntu.sh"
["ComputeCpp-CE-0.2.1-Linux"]="syclcc-ComputeCpp-0.2.0-to-0.4.0-Ubuntu.sh"
["ComputeCpp-CE-0.3.0-Linux"]="syclcc-ComputeCpp-0.2.0-to-0.4.0-Ubuntu.sh"
["ComputeCpp-CE-0.3.1-Linux"]="syclcc-ComputeCpp-0.2.0-to-0.4.0-Ubuntu.sh"
["ComputeCpp-CE-0.3.2-Linux"]="syclcc-ComputeCpp-0.2.0-to-0.4.0-Ubuntu.sh"
["ComputeCpp-CE-0.3.3-Ubuntu.16.04-64bit"]="syclcc-ComputeCpp-0.2.0-to-0.4.0-Ubuntu.sh"
["ComputeCpp-CE-0.4.0-Ubuntu-16.04-64bit"]="syclcc-ComputeCpp-0.2.0-to-0.4.0-Ubuntu.sh"
["ComputeCpp-CE-0.5.0-Ubuntu-16.04-64bit"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-0.5.1-Ubuntu-16.04-64bit"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-0.6.0-Ubuntu-16.04-64bit"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-0.6.1-Ubuntu-16.04-64bit"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-0.7.0-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-0.8.0-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-0.9.0-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-0.9.1-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.0.0-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.0.2-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.0.3-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.0.4-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.0.5-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.1.0-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.1.1-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.1.2-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.1.3-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.1.4-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.1.5-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.1.6-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-0.5.0-to-1.1.6-Ubuntu.sh"
["ComputeCpp-CE-1.2.0-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-1.2.0-to-2.0.0-Ubuntu.sh"
["ComputeCpp-CE-1.3.0-Ubuntu-16.04-x86_64"]="syclcc-ComputeCpp-1.2.0-to-2.0.0-Ubuntu.sh"
["ComputeCpp-CE-2.0.0-x86_64-linux-gnu"]="syclcc-ComputeCpp-1.2.0-to-2.0.0-Ubuntu.sh"
["ComputeCpp-CE-2.2.1-x86_64-linux-gnu"]="syclcc-ComputeCpp-1.2.0-to-2.0.0-Ubuntu.sh"
)

COMPUTECPP_DIR_BASENAME=`basename "$COMPUTECPP_DIR"`
COMPUTECPP_SCRIPT_VER=${RELEASE_SCRIPT_MAP[$COMPUTECPP_DIR_BASENAME]}

# I think as long as the helper script always remains synched with the release
# script map this is unlikely to fail
if [[ ! -z "$COMPUTECPP_SCRIPT_VER" ]]; then 
  SYCLCC_FILENAME=$COMPUTECPP_SCRIPT_VER
else
  usage 3 "Invalid ComputeCpp version, cannot find in RELEASE_SCRIPT_MAP"
fi

$SYCLCC_FILENAME "$@"
exit $?

